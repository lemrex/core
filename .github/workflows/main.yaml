name: CI/CD to Huawei SWR and CCE

on:
  push:
    branches:
      - mastered

env:
  REGION: af-south-1
  REGISTRY: swr.af-south-1.myhuaweicloud.com/ralf

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Huawei Cloud SWR
        uses: huaweicloud/swr-login@v2.1.0
        with:
          access-key-id: ${{ secrets.ACCESSKEY }}
          access-key-secret: ${{ secrets.SECRETACCESSKEY }}
          region: ${{ env.REGION }}

      - name: Build and push Docker images
        run: |
          docker build -t $REGISTRY/auth:${{ github.sha }} ./auth
          docker push $REGISTRY/auth:${{ github.sha }}

          docker build -t $REGISTRY/account:${{ github.sha }} ./account
          docker push $REGISTRY/account:${{ github.sha }}

          docker build -t $REGISTRY/transaction:${{ github.sha }} ./transaction
          docker push $REGISTRY/transaction:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" > $HOME/.kube/config


      - name: Update image versions in deployments
        run: |
          sed -i "s|auth-image|swr.af-south-1.myhuaweicloud.com/ralf/auth:${{ github.sha }}|g" deployment.yaml
          sed -i "s|account-image|swr.af-south-1.myhuaweicloud.com/ralf/account:${{ github.sha }}|g" deployment.yaml
          sed -i "s|transaction-image|swr.af-south-1.myhuaweicloud.com/ralf/transaction:${{ github.sha }}|g" deployment.yaml

      - name: Generate final configmap from template
        run: |
          envsubst < config-template.yaml > configmap.yaml
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SHARED_DB_URI: ${{ secrets.SHARED_DB_URI }}
          TENANT_DB_PREFIX: ${{ secrets.TENANT_DB_PREFIX }}


      - name: Apply K8s manifests to CCE
        run: |
          kubectl apply -f k8s/

